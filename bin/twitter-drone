#!/usr/bin/env node

const command = require('commander');
const dotenv = require('dotenv');
const drone = require('../');
const core = drone.core;
const spinner = drone.spinner;
const option = drone.option;
const packageArray = require('../package.json');

let action;
let CORE;

command
	.version(packageArray.version)
	.option('-Q, --search-query <search-query>')
	.option('-T, --search-type <search-type>')
	.option('-L, --search-lang <search-lang>')
	.option('-S, --search-count <search-count>')
	.option('-R, --retweet-count <retweet-count>')
	.option('-F, --favorite-count <favorite-count>')
	.option('-I, --background-interval <background-interval>')
	.option('-B, --background-run')
	.option('-D, --dry-run');

command.command('retweet').action(() => action = 'retweet');
command.command('favorite').action(() => action = 'favorite');
command.command('follow').action(() => action = 'follow');
command.parse(process.argv);

dotenv.config();
if (process.env.TWITTER_CONSUMER_KEY &&
	process.env.TWITTER_CONSUMER_SECRET &&
	process.env.TWITTER_ACCESS_TOKEN &&
	process.env.TWITTER_ACCESS_TOKEN_SECRET
)
{
	spinner.init();
	option.init(
	{
		searchQuery: command.searchQuery,
		searchType: command.searchType,
		searchLang: command.searchLang,
		searchCount: command.searchCount,
		retweetCount: command.retweetCount,
		favoriteCount: command.favoriteCount,
		backgroundInterval: command.backgroundInterval,
		backgroundRun: command.backgroundRun,
		dryRun: command.dryRun
	});
	CORE = new core(
	{
		spinner: spinner,
		option: option
	});
	CORE.init(
	{
		consumer_key: process.env.TWITTER_CONSUMER_KEY,
		consumer_secret: process.env.TWITTER_CONSUMER_SECRET,
		access_token: process.env.TWITTER_ACCESS_TOKEN,
		access_token_secret: process.env.TWITTER_ACCESS_TOKEN_SECRET,
		timeout_ms: process.env.TWITTER_TIMEOUT_MS
	});
	CORE.run(action);
}
else
{
	process.exit(1);
}